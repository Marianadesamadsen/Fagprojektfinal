function [T,X] = ExplicitEuler(f, tspan, x0, u, d, p)
%
% ExplicitEuler 
% 
% DESCRIPTION:
% This function uses the explicit Euler method to approximate a solution 
% to a system of differential equations to the initial value problem.
%
% INPUT:
%   f      - function to handle that computes the derivative (MVP model).
%   tspan  - points in time where the solution is approximated.
%   x0     - Initial state vector.
%   u      - manipulated inputs (used for MVP model).
%   d      - disturbance inputs (used for MVP model).
%   p      - parameter vector   (used for MVP model).
%
% OUTPUT:
%   T - Time steps of control intervals             
%   X - The solution to the differential equations at each control step
% 
% PROJECT:
% Fagprojekt 2022
% A diabetes case study - Meal detection
%
% GENEREL:
% BSc                       : Mathematics and technology 
% University                : The Technical University of Denmark (DTU)
% Department                : Applied Mathematics and Computer Science 
% 
% AUTHORS:
% Emma Victoria Lind
% Mariana de SÃ¡ Madsen 
% Mona Saleem
% 
% CONTACT INFORMATION
% s201205@student.dtu.dk
% s191159@student.dtu.dk
% s204226@student.dtu.dk
%

% Number of steps to approximate between the control step
N = numel(tspan) - 1;

% Length of the vector
nx = numel(x0);

% Allocating memory for Outputs
T = zeros(N+1, 1);
X = zeros(N+1, nx); 

% Storing inizial condition
T(1) = tspan(1);
X(1,:) = x0;

% Step size in the approximation
h = (tspan(end)-tspan(1))/N;

% Overwriting such that we start with tk
tk = tspan(1);

% Overwriting such that we start with xk
xk = x0;

for k=1:N
    
    % Calculating fk (finding derivative with MVP model)
    fk = feval(f, tk, xk, u, d, p);
    
    % Calculating xk+1 (Explicit Euler step)
    xkp1 = xk + h*fk;
    
    % Storing it in the matrix
    X(k+1,:) = xkp1;
    
    % Updating the xk
    xk=xkp1; 
    
    % Calculating tkp1
    tkp1 = tspan(k+1);
    % Storing in the vector
    T(k+1) = tkp1;
    
end

end



